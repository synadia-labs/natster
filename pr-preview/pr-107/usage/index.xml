<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>User's Guide on Natster</title><link>https://docs.natster.io/pr-preview/pr-107/usage/</link><description>Recent content in User's Guide on Natster</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.natster.io/pr-preview/pr-107/usage/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://docs.natster.io/pr-preview/pr-107/usage/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.natster.io/pr-preview/pr-107/usage/getting-started/</guid><description>Natster doesn&amp;rsquo;t require much at all from its users. Before moving to the installation section, you will need a Synadia Cloud account. You can sign up for a free account with no commitments.
Synadia Cloud is a globally hosted, managed NATS cluster that gives distributed applications an unmatched foundation on which to build.
Go to cloud.synadia.com to register and create a new account. Once you&amp;rsquo;ve done that, move on to the Installation guide.</description></item><item><title>Initializing Natster</title><link>https://docs.natster.io/pr-preview/pr-107/usage/init/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.natster.io/pr-preview/pr-107/usage/init/</guid><description>&lt;p>In the &lt;strong>Getting Started&lt;/strong> section, you went through the process of signing up for a Synadia Cloud account if you didn&amp;rsquo;t already have one. The next thing we need to do is configure the Natster CLI so that it can communicate with Synadia Cloud on our behalf.&lt;/p></description></item><item><title>Creating a Media Catalog</title><link>https://docs.natster.io/pr-preview/pr-107/usage/create-catalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.natster.io/pr-preview/pr-107/usage/create-catalog/</guid><description>A media catalog is a collection of logically related media files. Their association with each other could be very specific, or you could have a simple catalog that contains all of the media you wish to share. Since catalogs are the unit of sharing, you&amp;rsquo;ll want to use your sharing plans to influence how many catalogs you have and what they contain.
Locate or Place Media Files Every catalog has a root directory and all files contained in the catalog must be somewhere (however many levels deep) under that root.</description></item><item><title>Sharing a Catalog</title><link>https://docs.natster.io/pr-preview/pr-107/usage/share-catalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.natster.io/pr-preview/pr-107/usage/share-catalog/</guid><description>Catalog sharing in Natster is a secure, one-direction agreement between two accounts. This share is directly between you, the sharer, and the target or recipient of your share. Synadia doesn&amp;rsquo;t get any inside information about this share.
Getting a Target Account Key Part of the decentralized appeal of this system (and, of course, NATS itself) is that you can do things without requiring central administration or facilitation. This is true of the Natster share system, which builds on NATS&amp;rsquo; account exports.</description></item><item><title>Serving a Catalog</title><link>https://docs.natster.io/pr-preview/pr-107/usage/serve-catalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.natster.io/pr-preview/pr-107/usage/serve-catalog/</guid><description>Serving a catalog involves starting the Natster catalog service. You can run this service anywhere that it has physical access to the contents of the media catalog. Thanks to the global connectivity offered by NGS, you can run this server on your laptop, in the cloud, or even on a Raspberry Pi if the mood suits.
Starting a Catalog Server Starting the server is easy.
natster catalog serve myvideos Here myvideos is the name of a previously created (and hopefully shared) catalog.</description></item><item><title>Import a Catalog</title><link>https://docs.natster.io/pr-preview/pr-107/usage/import-catalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.natster.io/pr-preview/pr-107/usage/import-catalog/</guid><description>In Natster, a catalog import is really not much more than a simple NATS account import. For every catalog you import, Natster will create an NGS/NATS subject import in your account.
Depending on the type of Synadia Cloud team you have and the quotas set on the account you&amp;rsquo;re using for Natster, you might see catalog imports fail. Every catalog import consumes 2 (one for the service, one for media) NATS subject imports.</description></item><item><title>Downloading Files</title><link>https://docs.natster.io/pr-preview/pr-107/usage/download/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.natster.io/pr-preview/pr-107/usage/download/</guid><description>Downloading files can be done directly from the Natster CLI. First you need to query a given catalog&amp;rsquo;s contents via the natster catalog contents command. As you&amp;rsquo;ve seen already this will contain the unique hash of each file in that catalog. To download a file, you need to know the catalog in which it resides, and the hash.
The following command will download a video from the synadiahub catalog:
$ natster catalog download synadiahub \ dbf499dc63b7f990762d578208b8ac5ee9d74d193573219e2ad2f3077841e769 \ .</description></item><item><title>Web UI</title><link>https://docs.natster.io/pr-preview/pr-107/usage/website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.natster.io/pr-preview/pr-107/usage/website/</guid><description>Using Natster&amp;rsquo;s web UI is just a matter of pointing your browser at natster.io and logging in. Natster supports both Google (e.g. gmail) and Github authentication.
Before going to the website, however, you should bind your web identity to your Natster account/CLI.
Binding your Web Context The Natster web application not only needs to know who you are via Google or Github authentication, but it also needs to know which Natster account context to use whenever you log in.</description></item><item><title>Installation</title><link>https://docs.natster.io/pr-preview/pr-107/usage/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.natster.io/pr-preview/pr-107/usage/installation/</guid><description>Natster installation is quite simple. The only thing you need after you&amp;rsquo;ve set up your Synadia Cloud account is the Natster CLI.
You can download the CLI using the following shell command:
curl -sSf https://natster.io/install.sh | sh After following the prompts and installing the CLI, you can verify your installation with the following command:
natster --version v1.0.0 [none] | BuiltOn: 12 Mar 24 08:10 EDT Your version may vary from what&amp;rsquo;s shown above, but if you can run the CLI then you should be able to move on to the next step.</description></item></channel></rss>